<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.kh.spring.match.model.dao.MatchDao">
	<resultMap type="gym" id="matchMap"></resultMap>
	<resultMap type="MatchInfo" id="scheduleInfoMap">
		<result property="" column="" />
	</resultMap>
	<resultMap type="MatchInfo" id="scheduleIfvMap">
		<result property="code" column="match_no" />
	</resultMap>
	<resultMap type="Match" id="MatchMap"></resultMap>
	<resultMap type="MatchList" id="MatchListMap"></resultMap>
	
	<select id="selectScheduleList" resultMap="scheduleInfoMap">
		SELECT S.GYM_NO, G.GYM_NAME, G.GYM_ADDRESS, G.GYM_DETAILADDRESS, S.MATCH_DATE, S.MATCH_TIME, S.CODE
		FROM SCHEDULE S
		JOIN GYM G ON S.GYM_NO = G.GYM_NO
		WHERE S.MATCH_DATE BETWEEN TO_DATE(#{matchdate} || ' 00:00:00', 'YYYY/MM/DD HH24:MI:SS') AND TO_DATE(#{matchdate} || ' 23:59:59', 'YYYY/MM/DD HH24:MI:SS')
		ORDER BY S.GYM_NO, S.MATCH_TIME
	</select>
	
	<insert id="registerMatch">
		INSERT INTO MATCH
		(NO, MATCH_NO, GYM_NO, USER_ID1, MATCHDATE, MATCHTIME, MATCH_STATUS, DEL_YN)
		VALUES(
			SEQ_NO.NEXTVAL,
			#{matchNo},
			#{gymNo},
			#{userId1},
			#{matchdate},
			#{matchtime},
			#{matchStatus},
			#{delYn}
		)		
	</insert>
	
	<select id="selectMatch" resultMap="MatchMap">
		SELECT MATCH_NO, GYM_NO, USER_ID1, DEL_YN
		FROM MATCH
		WHERE MATCH_NO = #{matchNo}
		AND GYM_NO     = #{gymNo}
		AND USER_ID1   = #{userId1}
	</select>
	
	<update id="updateMatch">
		UPDATE MATCH
		<set>
			<if test="userId1     != null">USER_ID1       = #{userId1},    </if>
			<if test="userId2     != null">USER_ID2       = #{userId2},    </if>
			<if test="matchdate   != null">MATCHDATE      = #{matchdate},  </if>
			<if test="matchtime   != null">MATCHTIME      = #{matchtime},  </if>
			<if test="score1      != null">SCORE1         = #{score1},     </if>
			<if test="score2      != null">SCORE2         = #{score2},     </if>
			<if test="matchStatus != null">MATCH_STATUS   = #{matchStatus},</if>
			<if test="delYn       != null">DEL_YN         = #{delYn}       </if>
		</set>
		WHERE MATCH_NO = #{matchNo}
		AND USER_ID1   = #{userId1}
	</update>
	
	<select id="selectMatchList" resultMap="scheduleIfvMap" parameterType="map">
		SELECT M.NO, M.MATCH_NO, G.GYM_NO, G.GYM_NAME, M.MATCHDATE, M.MATCHTIME
		FROM MATCH M
		JOIN GYM G ON M.GYM_NO = G.GYM_NO
		WHERE M.USER_ID1 = #{userId}
		AND M.MATCHDATE BETWEEN TO_DATE(#{matchdate} || ' 00:00:00', 'YYYY/MM/DD HH24:MI:SS') AND TO_DATE(#{matchdate} || ' 23:59:59', 'YYYY/MM/DD HH24:MI:SS')
		AND M.DEL_YN     = 'N'
		ORDER BY M.GYM_NO, M.MATCHTIME
		
		<!-- SELECT M.NO, M.MATCH_NO, G.GYM_NO, G.GYM_NAME, M.MATCHDATE, M.MATCHTIME
		FROM MATCH M
		JOIN GYM G ON M.GYM_NO = G.GYM_NO
		WHERE M.USER_ID1 = #{userId1}
		AND M.MATCHDATE >= SYSDATE
		AND M.DEL_YN     = 'N'
		ORDER BY M.MATCHDATE, M.MATCHTIME -->
	</select>
	
	<select id="selectTotalRecordMatchList" resultType="_int">
		select count(*)
		  from match
	</select>
	
	<select id="selectMatchingList" resultMap="MatchListMap">
		select m.no, m.matchdate, m.matchtime, g.gym_address, g.gym_detailaddress, p.pro_nick, p.user_id
		  from match m, gym g, profile p
		 where m.gym_no = g.gym_no
		   and m.user_id1 = p.user_id
		 order by no desc
	</select>
	
	<select id="matchListFilterGender" resultMap="MatchListMap">
		select m.no, m.matchdate, m.matchtime, g.gym_address, g.gym_detailaddress, p.pro_nick, p.user_id
		  from match m, gym g, profile p, member r
		 where m.gym_no = g.gym_no
		   and m.user_id1 = p.user_id
		   and m.user_id1 = r.user_id
		   and r.user_gender = #{gender}
		 order by m.no desc
	</select>
	
	<select id="selectTotalRecordMatchListGender" resultType="_int">
      	  select count(*)
                    from match m, gym g, profile p, member r
		            where m.gym_no = g.gym_no
		            and m.user_id1 = p.user_id
		            and m.user_id1 = r.user_id
		            and r.user_gender = #{gender}
	</select>
	
	<select id="selectTotalRecordMatchListLocation" resultType="_int">
      	  select count(*)
                    from match m, gym g, profile p
		            where m.gym_no = g.gym_no
		            and m.user_id1 = p.user_id
		            and g.gym_address Like '' || #{locations} || '%'
	</select>
	
	<select id="matchListFilterLocation" resultMap="MatchListMap">
		select m.no, m.matchdate, m.matchtime, g.gym_address, g.gym_detailaddress, p.pro_nick, p.user_id
		  from match m, gym g, profile p
		 where m.gym_no = g.gym_no
		   and m.user_id1 = p.user_id
		   and g.gym_address Like '' || #{locations} || '%'
		 order by m.no desc
	</select>
	
	<select id="selectTotalRecordMatchListNick" resultType="_int">
      	  select count(*)
                    from match m, gym g, profile p
		            where m.gym_no = g.gym_no
		            and m.user_id1 = p.user_id
		            and p.pro_nick Like '%' || #{searchInput} || '%'
	</select>
	
	<select id="matchListFilterNick" resultMap="MatchListMap">
		select m.no, m.matchdate, m.matchtime, g.gym_address, g.gym_detailaddress, p.pro_nick, p.user_id
		  from match m, gym g, profile p
		 where m.gym_no = g.gym_no
		   and m.user_id1 = p.user_id
		   and p.pro_nick Like '%' || #{searchInput} || '%'
		 order by m.no desc
	</select>
	
	<select id="matchListFilterDow" resultMap="MatchListMap">
		select m.no, m.matchdate, m.matchtime, g.gym_address, g.gym_detailaddress, p.pro_nick, p.user_id
		  from match m, gym g, profile p
		 where m.gym_no = g.gym_no
		   and m.user_id1 = p.user_id
		   and to_char(m.matchdate, 'day') = #{dowString}
		 order by m.no desc
	</select>
	
	<select id="selectTotalRecordMatchListDow" resultType="_int">
		select count(*)
		  from match m, gym g, profile p
		 where m.gym_no = g.gym_no
		   and m.user_id1 = p.user_id
		   and to_char(m.matchdate, 'day') = #{dowString}
		 order by m.no desc
	</select>
	
	<delete id="deleteMatch">
		DELETE FROM MATCH
		WHERE MATCH_NO = #{code}
	</delete>
	
	
</mapper>